First method recursive

class Solution {
    public int search(int[] nums, int target) {
        int start =0;
        int end = nums.length-1;
        return searchR(nums, target, start, end);
    }
    
    private static int searchR(int[] nums, int target, int start, int end){
        if (start > end){
            return -1;
        }
        else{
            int middle = (start+end)/2;
            if (target == nums[middle]){
                return middle;
            }
            else if(target < nums[middle]){
                return searchR(nums, target, start, middle-1);
            }
            else{
                return searchR(nums, target, middle+1, nums.length-1);
            }
        }
    }
        
}

Second method while loop

class Solution {
    public int search(int[] nums, int target) {
        int start = 0; 
        int end = nums.length-1;
        int middle;
        while(start<=end){
            middle = (start+end)/2;
            if (target==nums[middle]){
                return middle;
            }
            else if(target<nums[middle]){
                end=middle-1;
            }
            else{
                start=middle+1;
            }
        }
        return -1;
    }
}
